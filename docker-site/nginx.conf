# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096; # Nginx does not start without doubling this from the 2048 default to 4096

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    # Compression Options
    gzip                on;
    gzip_buffers        4 32k; # Set the buffer size of gzip, 4 32k is good enough for almost everybody.
    gzip_proxied        any; # Allows compressed responses for any request even from proxies
    gzip_types
      text/css
      text/xml
      application/javascript
      application/atom+xml
      application/rss+xml
      text/plain
      application/font-woff
      application/json
      application/pdf
      application/x-x509-ca-cert
      application/xhtml+xml
      application/xspf+xml; # Here I just copied in all of the MIME types that looked compressible from /etc/nginx/mime.types (leaving out ones I will clearly never use)
    gzip_vary           on; # Enables response header of "Vary: Accept-Encoding

    # Load List of Tor Exits for Auto-Redirect
    include        /etc/nginx/torexits.conf;

    server {
        listen       8080 default_server; # Listen on 8080 (doesn't require root)
        listen       [::]:8080 default_server; # Listen on 8080 (doesn't require root)
        server_name  _;
        root         /usr/share/nginx/html/kittens/site;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

	# Include index.php in the index directive
	index index.php;

	# Handle PHP appropriately
	location ~ \.php$ {
	  try_files $uri =404;
	  fastcgi_split_path_info ^(.+\.php)(/.+)$;
	  fastcgi_pass unix:/run/php-fpm/www.sock; # Pass to php-fpm Unix socket (CentOS/Fedora location)
	  fastcgi_index index.php;
	  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	  include fastcgi_params;
	}

	# Since we're behind a reverse proxy, we need to let nginx know,
	# so that it doesn't mistake our proxy IP for the real client IP
	# when trying to determine if a client is arriving via Tor.
	# (We also need to make sure that the proxy is configured to use
	# this with "proxy_set_header X-Real-IP $remote_addr;" on the proxy side.
	set_real_ip_from    172.16.16.20; # Reverse proxy IP here
	real_ip_header      X-Real-IP;

	# Redirect users of Tor exits
	# Please note the use of 'include' on the /etc/nginx/torexits.conf 
	# file up in the http directive
	if ($torExit) {
	  # If user is listed in the torexits.conf file as being a Tor exit, redirect using a 301.
	  return 301	http://kittenslbrpopxz7.onion$request_uri;
	}
    }
}
