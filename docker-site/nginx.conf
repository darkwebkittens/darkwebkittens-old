# nginx.conf for the Docker container hosting creativecommonscatpictures.com

# Based on the default nginx config file with some tweaks to
# secure an .onion domain pointing directly at this server.

error_log				/var/log/nginx/error.log warn;
pid					/var/run/nginx.pid; # Set for Fedora/CentOS. Probably in a different place on Debian.

worker_processes			auto;

events {
	worker_connections		1024; # Number of connections per worker process
}

http {
	access_log			/dev/null; # Anonymised logging is handled by my SSL terminator instead of at Docker container endpoints.

	# Timeouts to ensure we do not keep connections open longer then necessary to reduce resource usage and deny Slowloris type attacks.
	client_body_timeout		4s; # maximum time between packets the client can pause when sending nginx any data
	client_header_timeout		4s; # maximum time the client has to send the entire header to nginx
	keepalive_timeout		75s; # timeout which a single keep-alive client connection will stay open
	send_timeout			24s; # maximum time between packets nginx is allowed to pause when sending the client data

	# Various options
	charset				utf-8;
	default_type			application/octet-stream;
	ignore_invalid_headers		on;
	include				/etc/nginx/conf.d/*.conf;
	include				/etc/nginx/mime.types;
	include				/etc/nginx/torexits.conf;
	keepalive_requests		50;  # Number of requests per connection (does not affect SPDY)
	keepalive_disable		none; # Allow all browsers to use keepalive connections
	max_ranges			1; # Only allow a single range header - for resumed downloads, and to stop large range header DoS attacks
	open_file_cache			max=1000 inactive=2h;
	open_file_cache_errors		on;
	open_file_cache_min_uses	1;
	open_file_cache_valid		1h;
	output_buffers			1 512; # Use one 512k chunk output buffer (only if sendfile is off)
	read_ahead			512K; # Kernel read head set to the output_buffers
	recursive_error_pages		on;
	reset_timedout_connection	on; # Reset timed out connections to free RAM
	sendfile			on;  # On for decent direct disk I/O
	server_tokens			off; # Version number in error pages
	server_name_in_redirect		off; # If off, nginx will use the requested Host header
	source_charset			utf-8; # Same value as "charset"
	tcp_nodelay			on; # Nagle buffering algorithm, used for keepalive only
	tcp_nopush			off;

	# Compression Options
	gzip				on;
	gzip_buffers			4 32k; # Set the buffer size of gzip, 4 32k is good enough for almost everybody. (Well, according to the tutorial I copied this line from...)
	gzip_proxied			any; # Allows compressed responses for any request even from proxies
	gzip_types			text/html
					text/css
					text/xml
					application/javascript
					application/atom+xml
					application/rss+xml
					text/plain
					application/font-woff
					application/json
					application/pdf
					application/x-x509-ca-cert
					application/xhtml+xml
					application/xspf+xml; # Here I just copied in all of the MIME types that looked compressible from /etc/nginx/mime.types (leaving out ones I will clearly never use)
	gzip_vary			on; # Enables response header of "Vary: Accept-Encoding

	# Manage standard headers
	add_header		X-Frame-Options "DENY"; # Disallow the site from being loaded in an IFRAME. Being deprecated in favour of CSP's frame-ancestors directive: https://appsec-labs.com/portal/anti-clickjacking/
	add_header		X-Content-Type-Options nosniff;
	add_header		X-XSS-Protection "1; mode=block";
	add_header		Cache-Control "public";
	add_header		Referrer-Policy "no-referrer"; # Only supported from Firefox 52+, but we can now control referrer behaviour with a HTTP header

	# Manage CSP header (https://wiki.mozilla.org/Security/CSP/Specification)
	## This policy will block basically all scripts, plugins, child frames (YouTube embeds etc.) and will need reviewing if I ever start using those but, for now, this is going to be pretty secure.
	## I usually add this at SSL-terminator level, but I'm putting this in here in case I start serving the site via Tor hidden service.
	add_header		Content-Security-Policy "frame-ancestors 'none'; default-src 'none'; font-src 'self'; img-src 'self'; media-src 'self'; style-src 'self';";

	server {
		listen			8080;		# listen on HTTP port for ipv4 (avoiding port 80 so we don't need root privs to listen)
#		listen			[::]:8080;	# listen on HTTP port for ipv6 (avoiding port 80 so we don't need root privs to listen)
		root			/usr/share/nginx/html/site;
		index			index.php index.html;

		# Handle PHP appropriately
		location ~ \.php$ {
			try_files $uri =404;
			fastcgi_split_path_info ^(.+\.php)(/.+)$;
#			fastcgi_pass unix:/var/run/php5-fpm.sock; # Pass to php-fpm Unix socket (Debian location)
			fastcgi_pass unix:/run/php-fpm/www.sock; # Pass to php-fpm Unix socket (CentOS/Fedora location)
			fastcgi_index index.php;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			include fastcgi_params;
		}

		# Since we're behind a reverse proxy, we need to let nginx know, so that it doesn't mistake our proxy IP for the real client IP when trying to determine if a client is arriving via Tor
		set_real_ip_from	172.16.16.20; # Reverse proxy IP here
		real_ip_header		X-Real-IP; # We need to make sure that the proxy is configured to use this with "proxy_set_header X-Real-IP $remote_addr;" on the proxy side.

		# Redirect users of Tor exits
		# Please note the use of 'include' on the /etc/nginx/torexits.conf file up in the http directive
		if ($torExit) {
			# If we're listed in the torexits.conf file as being a Tor exit, redirect using a 301.
			return 301	http://kittenslbrpopxz7.onion$request_uri;
		}

		# Other special location blocks
		location = /install.php { return 404; }
		location = /server-status { return 404; }
		location = /.htaccess { return 404; }
		location /.git { return 404; }
		location /admin { return 404; }
		location /wp-admin { return 404; }
		location /wp-login { return 404; }

		# Purge some headers that reveal too much
		more_clear_headers	"Age";
		more_set_headers	"Server: '; DROP TABLE headers; --";
		more_clear_headers	"Via";
		more_clear_headers	"X-From-Nginx";
		more_clear_headers	"X-NA";
		more_clear_headers	"X-Powered-By";
		more_clear_headers	"X-Request-Id";
		more_clear_headers	"X-Runtime";
		more_clear_headers	"X-Varnish";
	}
}
