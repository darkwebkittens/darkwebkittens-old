#user                           nginx; # Run as nginx user
worker_processes                auto;

pid                             /run/nginx.pid;

events {
        worker_connections      1024;
}

http {
        # Disable logging
        access_log              off;
        error_log               off;

        sendfile                on;
        tcp_nopush              on;
        tcp_nodelay             on;
        keepalive_timeout       65;
        types_hash_max_size     2048;

        include                 /etc/nginx/conf.d/*.conf;
        include                 /etc/nginx/mime.types;

        default_type            application/octet-stream;
	ignore_invalid_headers		on;

        # Compression Options
        gzip				on;
        gzip_buffers			4 32k; # Set the buffer size of gzip, 4 32k is good enough for almost everybody. (Well, according to the tutorial I copied this line from...)
        gzip_proxied			any; # Allows compressed responses for any request even from proxies
        gzip_types			text/html
                                        text/css
                                        text/xml
                                        application/javascript
                                        application/atom+xml
                                        application/rss+xml
                                        text/plain
                                        application/font-woff
                                        application/json
                                        application/pdf
                                        application/x-x509-ca-cert
                                        application/xhtml+xml
                                        application/xspf+xml; # Here I just copied in all of the MIME types that looked compressible from /etc/nginx/mime.types (leaving out ones I will clearly never use)
        gzip_vary			on; # Enables response header of "Vary: Accept-Encoding

# Site to host as onion service
  server {
        listen                  unix:/tmp/nginx-listen.sock; # Listen on a Unix socket (non-SSL)

        # Allow only Unix socket connections
        allow "unix:";
        deny all;

        location / {
        proxy_pass		http://172.16.16.80/; # If you set this to a hostname instead of IP, you might need to specify a DNS server with the 'resolver' directive.
        proxy_read_timeout      90;

        # These directives define the headers that will be passed from the CLIENT to the SERVER.
        proxy_set_header        Host $http_host;

        # These directives define the headers that will be ignored and not passed from SERVER to CLIENT
        proxy_hide_header       Cache-Control;
        proxy_hide_header       Content-Security-Policy;
        proxy_hide_header       Referrer-Policy;
        proxy_hide_header       X-Content-Type-Options;
        proxy_hide_header       X-Frame-Options;
        proxy_hide_header       X-XSS-Protection;
      }

      # Deny special location blocks
      location = /install.php   { return 404; }
      location = /server-status { return 404; }
      location = /.htaccess     { return 404; }
      location /.git            { return 404; }
      location /admin           { return 404; }
      location /wp-admin        { return 404; }
      location /wp-login        { return 404; }

      # Manage added headers
      add_header                X-Frame-Options "SAMEORIGIN";
      add_header                X-Content-Type-Options nosniff;
      add_header                X-XSS-Protection "1; mode=block";
      add_header                Cache-Control "public";
      add_header                Referrer-Policy "no-referrer"; # Only supported from Firefox 52+, but we can now control referrer behaviour with a HTTP header

      # Purge some headers that reveal too much
      more_clear_headers        "Age";
      more_clear_headers        "Server";
      more_clear_headers        "Via";
      more_clear_headers        "X-From-Nginx";
      more_clear_headers        "X-NA";
      more_clear_headers        "X-Powered-By";
      more_clear_headers        "X-Request-Id";
      more_clear_headers        "X-Runtime";
      more_clear_headers        "X-Varnish";
  }
}
